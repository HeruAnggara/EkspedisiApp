// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String   @db.VarChar(255)
  email      String?  @unique @db.VarChar(255)
  no_wa      String   @unique @db.VarChar(255)
  alamat     String   @db.VarChar(255)
  username   String   @db.VarChar(255) @default("")
  password   String   @db.VarChar(255)
  levelId    Int
  Level      Level    @relation(fields: [levelId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt() @db.Timestamp(6)
}

model Level {
  Users User[]
  id    Int    @id @default(autoincrement())
  kode  Int    @db.Int()
  level String @db.VarChar(255)
}

model JenisPengeluaran {
  DaftarPengeluaran DaftarPengeluaran[]
  id                String              @id @default(uuid())
  jenisPengeluaran  String              @db.VarChar(255)
  keterangan        String?             @db.VarChar(255)
}

model Perlengkapan {
  PembelianPerlengkapan PembelianPerlengkapan[]
  id                    String                  @id @default(uuid())
  namaPerlengkapan      String                  @db.VarChar(255)
  keterangan            String?                 @db.VarChar(255)
}

model Supplier {
  PembelianPerlengkapan PembelianPerlengkapan[]
  id                    String                  @id @default(uuid())
  namaSupplier          String                  @db.VarChar(255)
  keteranganBarang      String?                 @db.VarChar(255)
  harga                 Int
  jumlahBarang          Int
  nomorHp               String                  @db.VarChar(255)
  created_at            DateTime                @default(now())
  updated_at            DateTime                @updatedAt() @db.Timestamp(6)
}

model DaftarPengeluaran {
  id                String           @id @default(uuid())
  tglPengeluaran    DateTime         @db.Date()
  keterangan        String?          @db.VarChar(255)
  jumlahPembayaran  Int
  yangMembayar      String           @db.VarChar(255)
  yangMenerima      String           @db.VarChar(255)
  metodePembayaran  MetodePembayaran
  buktiPembayaran   String?          @db.VarChar(255)
  // statusPengeluaran: 1 = Disetujui, 2 = Pending
  statusPengeluaran Int              @default(2)
  jenisPengeluaran  String
  JenisPengeluaran  JenisPengeluaran @relation(fields: [jenisPengeluaran], references: [id], onDelete: NoAction, onUpdate: NoAction)
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt() @db.Timestamp(6)
}

enum MetodePembayaran {
  Tunai
  Transfer
  Kartu_Kredit
}

model PemasukkanLain {
  id               String   @id @default(uuid())
  kategori         String   @db.VarChar(255)
  namaCustomer     String   @db.VarChar(255)
  harga            Int
  tanggalTransaksi DateTime @db.Date()
  komisi           Int
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt() @db.Timestamp(6)
}

model PembelianPerlengkapan {
  id               String       @id @default(uuid())
  tanggalPembelian DateTime     @db.Date()
  idPerlengkapan   String
  idSupplier       String
  harga            Int
  jumlah           Int
  keterangan       String?      @db.VarChar(255)
  nota             String?      @db.Text
  Perlengkapan     Perlengkapan @relation(fields: [idPerlengkapan], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Supplier         Supplier     @relation(fields: [idSupplier], references: [id], onDelete: NoAction, onUpdate: NoAction)
  created_at       DateTime     @default(now())
  updated_at       DateTime     @updatedAt() @db.Timestamp(6)
}

model Customer {
  id          String   @id @default(uuid())
  nama        String   @db.VarChar(255)
  noWa        String   @unique @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  alamat      String   @db.VarChar(255)
  username    String?   @db.VarChar(255)
  limitCredit Int      @default(0)
  point       Int      @default(0)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt() @db.Timestamp(6)
}
